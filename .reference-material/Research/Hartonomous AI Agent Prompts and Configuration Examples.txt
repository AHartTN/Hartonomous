// This is a master list of prompts and configurations for the Hartonomous AI agent.
// Each object represents a complete, executable instruction for a specific task.
// The agent will read this, validate the metadata, and execute the task.

// A standard File-Centric Prompt structure for the agent.
// The 'metadata' object is the "command," and the 'content_file' is the "context."
// ----------------------------------------------------------------------------------
// {
//     "metadata": {
//         "task": "generate_microservice",
//         "persona": "senior_developer",
//         "language": "python",
//         "framework": "fastapi"
//     },
//     "content_file": "path/to/project_spec.md"
// }
// ----------------------------------------------------------------------------------

[
    {
        "prompt_name": "Create a New Microservice",
        "description": "Generates a new, full-stack microservice based on a detailed specification file.",
        "metadata": {
            "task": "generate_microservice",
            "persona": "senior_developer",
            "language": "python",
            "framework": "fastapi",
            "db_schema": "sqlserver",
            "dependencies": ["sqlalchemy", "pydantic"],
            "constraints": ["must_include_unit_tests", "must_use_crud_pattern"]
        },
        "content_file": "src/api_specifications/user_profile_service.md"
    },
    {
        "prompt_name": "Refactor Code for Performance",
        "description": "Analyzes an existing C# file and refactors it to improve performance and readability.",
        "metadata": {
            "task": "refactor_code",
            "persona": "performance_architect",
            "language": "csharp",
            "target_metric": "latency",
            "constraints": ["must_be_idempotent", "do_not_alter_api_signature"]
        },
        "content_file": "src/services/legacy_api.cs"
    },
    {
        "prompt_name": "Generate a Custom Embedding Model",
        "description": "Generates a small, custom embedding model by fine-tuning on a large, on-disk model.",
        "metadata": {
            "task": "train_embedding_model",
            "persona": "ml_engineer",
            "source_model_id": "llama-400b-v2",
            "training_data_document_ids": ["doc_123", "doc_456"],
            "output_model_name": "project_specific_embeddings_v1"
        },
        "content_file": "docs/training_guidelines.md"
    },
    {
        "prompt_name": "Create a Database Migration Script",
        "description": "Generates a T-SQL migration script to update the database schema based on a new spec.",
        "metadata": {
            "task": "generate_migration",
            "persona": "database_administrator",
            "source_db": "sqlserver",
            "migration_type": "add_column",
            "constraints": ["must_be_non_destructive"]
        },
        "content_file": "src/db_migrations/add_user_profile_column.yaml"
    },
    {
        "prompt_name": "Create a Full Project Manifest",
        "description": "A high-level prompt to build the entire Hartonomous platform from scratch.",
        "metadata": {
            "task": "build_project",
            "persona": "lead_architect",
            "project_name": "Hartonomous",
            "constraints": ["must_adhere_to_constitutional_rules"]
        },
        "content_file": "docs/project_blueprint.md"
    }
]
